<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0.3 (Python 3.8.10 on linux)" generated="20211026 21:03:06.832" rpa="false" schemaversion="2">
<suite id="s1" name="Download" source="/home/m.calixta/Projeto/Tests/download.robot">
<test id="s1-t1" name="[000] - Teste download">
<kw name="New Browser" library="Browser">
<arg>chromium</arg>
<arg>False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20211026 21:03:07.927" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20211026 21:03:08.178" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20211026 21:03:07.925" endtime="20211026 21:03:08.178"/>
</kw>
<kw name="New Page" library="Browser">
<arg>https://pt-br.imgbb.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20211026 21:03:14.066" level="INFO">Successfully initialized new page object and opened url: https://pt-br.imgbb.com/</msg>
<msg timestamp="20211026 21:03:14.066" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20211026 21:03:08.179" endtime="20211026 21:03:14.067"/>
</kw>
<kw name="Promise To Upload File" library="Browser">
<var>${promise}</var>
<arg>/home/m.calixta/Projeto/Tests/Arquivos/b.png</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Returns a promise that resolves when file from ``path`` has been uploaded.
Fails if the upload has not happened during timeout.</doc>
<msg timestamp="20211026 21:03:14.074" level="INFO">${promise} = &lt;Future at 0x7f8ebe6049d0 state=pending&gt;</msg>
<status status="PASS" starttime="20211026 21:03:14.068" endtime="20211026 21:03:14.074"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[@id="home-cover-content"]/div[2]/a</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20211026 21:03:14.075" endtime="20211026 21:03:14.144"/>
</kw>
<kw name="Wait For" library="Browser">
<var>${upload_result}</var>
<arg>${promise}</arg>
<tag>Wait</tag>
<doc>Waits for promises to finish and returns results from them.
Returns one result if one promise waited. Otherwise returns an array of results.
If one fails, then this keyword will fail.</doc>
<msg timestamp="20211026 21:03:14.172" level="INFO">${upload_result} = None</msg>
<status status="PASS" starttime="20211026 21:03:14.144" endtime="20211026 21:03:14.173"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>20s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20211026 21:03:34.176" level="INFO">Slept 20 seconds</msg>
<status status="PASS" starttime="20211026 21:03:14.173" endtime="20211026 21:03:34.177"/>
</kw>
<status status="PASS" starttime="20211026 21:03:07.920" endtime="20211026 21:03:34.179"/>
</test>
<doc>Teste download</doc>
<status status="PASS" starttime="20211026 21:03:06.845" endtime="20211026 21:03:34.347"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Download">Download</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
